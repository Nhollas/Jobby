// <auto-generated />
using System;
using Jobby.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jobby.Persistence.Data.Migrations
{
    [DbContext(typeof(JobbyContext))]
    partial class JobbyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Jobby.Core.Entities.BoardAggregate.Board", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("UpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("Jobby.Core.Entities.BoardAggregate.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BoardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("JobListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ListName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobListId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Jobby.Core.Entities.BoardAggregate.JobList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("JobLists");
                });

            modelBuilder.Entity("Jobby.Core.Entities.BoardAggregate.Job", b =>
                {
                    b.HasOne("Jobby.Core.Entities.BoardAggregate.JobList", null)
                        .WithMany("Jobs")
                        .HasForeignKey("JobListId");
                });

            modelBuilder.Entity("Jobby.Core.Entities.BoardAggregate.JobList", b =>
                {
                    b.HasOne("Jobby.Core.Entities.BoardAggregate.Board", null)
                        .WithMany("JobList")
                        .HasForeignKey("BoardId");
                });

            modelBuilder.Entity("Jobby.Core.Entities.BoardAggregate.Board", b =>
                {
                    b.Navigation("JobList");
                });

            modelBuilder.Entity("Jobby.Core.Entities.BoardAggregate.JobList", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
