events {
    # Added explicit connection limit for better resource management
    worker_connections 1024;
}

http {
    server {
        listen 80;

        # Variables for CORS headers to avoid repetition
        set $cors_origin 'http://localhost:3000';
        set $cors_methods 'GET, POST, OPTIONS';
        set $cors_headers 'Origin, Content-Type, Accept, Authorization';

        location / {
            proxy_pass http://otel-collector:4318;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS headers with 'always' flag to ensure headers are sent even on errors
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' $cors_methods always;
            add_header 'Access-Control-Allow-Headers' $cors_headers always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Simplified OPTIONS handling - just return 204 without duplicating headers
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
    }
}
